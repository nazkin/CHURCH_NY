{"version":3,"file":"component---src-pages-events-js-5dcb1d08190a2e8bc743.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/constants/content/events.js","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","webpack://gatsby-starter-default/./node_modules/motion-utils/dist/es/noop.mjs","webpack://gatsby-starter-default/./node_modules/motion-utils/dist/es/global-config.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/frameloop/order.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/stats/buffer.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/frameloop/batcher.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/frameloop/render-step.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/frameloop/frame.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/keys-transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/keys-position.mjs","webpack://gatsby-starter-default/./node_modules/motion-utils/dist/es/array.mjs","webpack://gatsby-starter-default/./node_modules/motion-utils/dist/es/subscription-manager.mjs","webpack://gatsby-starter-default/./node_modules/motion-utils/dist/es/velocity-per-second.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/value/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://gatsby-starter-default/./node_modules/motion-utils/dist/es/memo.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/animation/GroupAnimation.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/animation/GroupAnimationWithThen.mjs","webpack://gatsby-starter-default/./node_modules/motion-utils/dist/es/time-conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/utils/is-bezier-definition.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/utils/supports/flags.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/utils/supports/memo.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/animation/waapi/easing/is-supported.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/stats/animation-count.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/animation/waapi/utils/attach-timeline.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/utils/sanitize.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/utils/float-regex.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/utils/single-color-regex.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/utils/is-nullish.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/utils/color-regex.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/number-browser.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/make-none-animatable.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/parse-transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/KeyframesResolver.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/DOMKeyframesResolver.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/utils/can-animate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/BaseAnimation.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/number.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/immediate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/color.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/visibility.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/complex.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/mix/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/spring/defaults.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://gatsby-starter-default/./node_modules/motion-utils/dist/es/progress.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/drivers/driver-frameloop.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/MainThreadAnimation.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/utils/accelerated-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/supports-waapi.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animators/AcceleratedAnimation.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/frameloop/microtask.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/gestures/hover.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","webpack://gatsby-starter-default/./node_modules/motion-dom/dist/es/gestures/press/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/measure.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/components/create-factory.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","webpack://gatsby-starter-default/./node_modules/framer-motion/dist/es/render/components/motion/create.mjs","webpack://gatsby-starter-default/./node_modules/@mui/system/esm/Box/Box.js","webpack://gatsby-starter-default/./src/components/EventList/index.js","webpack://gatsby-starter-default/./src/pages/events.js","webpack://gatsby-starter-default/./src/components/Footer/index.js"],"sourcesContent":["import * as React from \"react\"\n\nexport const EVENTS_CONTENT = {\n    en: {\n        title: \"Calendar of Events\",\n        content: <>\n            <div style={{display: \"flex\", width: \"80%\", height: \"80%\"}} data-events-calendar-app data-project-id=\"proj_rcajbWhaMnIMxDi4zif5R\" ></div>\n            <script type=\"text/javascript\" src=\"//dist.eventscalendar.co/embed.js\"></script>\n        </>\n    },\n    ua: {\n        title: \"Календар Подій\",\n        content: <>\n            <div style={{display: \"flex\", width: \"80%\", height: \"80%\"}} data-events-calendar-app data-project-id=\"proj_rcajbWhaMnIMxDi4zif5R\" ></div>\n            <script type=\"text/javascript\" src=\"//dist.eventscalendar.co/embed.js\"></script>\n        </>\n    }\n}","import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n    useManualTiming: false,\n};\n\nexport { MotionGlobalConfig };\n","const stepsOrder = [\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { read, resolveKeyframes, update, preRender, render, postRender } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        read.process(state);\n        resolveKeyframes.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"12.7.4\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","import { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\n\nclass GroupAnimation {\n    constructor(animations) {\n        // Bound to accomodate common `return animation.stop` pattern\n        this.stop = () => this.runAll(\"stop\");\n        this.animations = animations.filter(Boolean);\n    }\n    get finished() {\n        return Promise.all(this.animations.map((animation) => animation.finished));\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    getAll(propName) {\n        return this.animations[0][propName];\n    }\n    setAll(propName, newValue) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i][propName] = newValue;\n        }\n    }\n    attachTimeline(timeline, fallback) {\n        const subscriptions = this.animations.map((animation) => {\n            if (supportsScrollTimeline() && animation.attachTimeline) {\n                return animation.attachTimeline(timeline);\n            }\n            else if (typeof fallback === \"function\") {\n                return fallback(animation);\n            }\n        });\n        return () => {\n            subscriptions.forEach((cancel, i) => {\n                cancel && cancel();\n                this.animations[i].stop();\n            });\n        };\n    }\n    get time() {\n        return this.getAll(\"time\");\n    }\n    set time(time) {\n        this.setAll(\"time\", time);\n    }\n    get speed() {\n        return this.getAll(\"speed\");\n    }\n    set speed(speed) {\n        this.setAll(\"speed\", speed);\n    }\n    get startTime() {\n        return this.getAll(\"startTime\");\n    }\n    get duration() {\n        let max = 0;\n        for (let i = 0; i < this.animations.length; i++) {\n            max = Math.max(max, this.animations[i].duration);\n        }\n        return max;\n    }\n    runAll(methodName) {\n        this.animations.forEach((controls) => controls[methodName]());\n    }\n    flatten() {\n        this.runAll(\"flatten\");\n    }\n    play() {\n        this.runAll(\"play\");\n    }\n    pause() {\n        this.runAll(\"pause\");\n    }\n    cancel() {\n        this.runAll(\"cancel\");\n    }\n    complete() {\n        this.runAll(\"complete\");\n    }\n}\n\nexport { GroupAnimation };\n","import { GroupAnimation } from './GroupAnimation.mjs';\n\nclass GroupAnimationWithThen extends GroupAnimation {\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n}\n\nexport { GroupAnimationWithThen };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean((typeof easing === \"function\" && supportsLinearEasing()) ||\n        !easing ||\n        (typeof easing === \"string\" &&\n            (easing in supportedWaapiEasing || supportsLinearEasing())) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\n\nexport { isWaapiSupportedEasing };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(i / (numPoints - 1)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","import { isBezierDefinition } from '../../../utils/is-bezier-definition.mjs';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\" && supportsLinearEasing()) {\n        return generateLinearEasing(easing, duration);\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeInOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const animation = element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n        pseudoElement,\n    });\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function attachTimeline(animation, timeline) {\n    animation.timeline = timeline;\n    animation.onfinish = null;\n}\n\nexport { attachTimeline };\n","import { noop } from 'motion-utils';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { alpha, number } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst browserNumberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n};\n\nexport { browserNumberValueTypes };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../../../value/types/numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { alpha } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { browserNumberValueTypes } from './number-browser.mjs';\nimport { transformValueTypes } from './transform.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    ...browserNumberValueTypes,\n    ...transformValueTypes,\n    zIndex: int,\n    size: px,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../dom/value-types/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { parseValueFromTransform, readTransformValue };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { parseValueFromTransform } from '../../html/utils/parse-transform.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { frame } from 'motion-dom';\nimport { removeNonTranslationalTransform } from '../dom/utils/unit-conversion.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete());\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    readAllKeyframes();\n    measureAllKeyframes();\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        /**\n         * Track whether this resolver has completed. Once complete, it never\n         * needs to attempt keyframe resolution again.\n         */\n        this.isComplete = false;\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        /**\n         * Track whether this resolver is currently scheduled to resolve\n         * to allow it to be cancelled and resumed externally.\n         */\n        this.isScheduled = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.isScheduled = true;\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        /**\n         * If a keyframe is null, we hydrate it either by reading it from\n         * the instance, or propagating from previous keyframes.\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null) {\n                /**\n                 * If the first keyframe is null, we need to find its value by sampling the element\n                 */\n                if (i === 0) {\n                    const currentValue = motionValue?.get();\n                    const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n                    if (currentValue !== undefined) {\n                        unresolvedKeyframes[0] = currentValue;\n                    }\n                    else if (element && name) {\n                        const valueAsRead = element.readValue(name, finalKeyframe);\n                        if (valueAsRead !== undefined && valueAsRead !== null) {\n                            unresolvedKeyframes[0] = valueAsRead;\n                        }\n                    }\n                    if (unresolvedKeyframes[0] === undefined) {\n                        unresolvedKeyframes[0] = finalKeyframe;\n                    }\n                    if (motionValue && currentValue === undefined) {\n                        motionValue.set(unresolvedKeyframes[0]);\n                    }\n                }\n                else {\n                    unresolvedKeyframes[i] = unresolvedKeyframes[i - 1];\n                }\n            }\n        }\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete() {\n        this.isComplete = true;\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (!this.isComplete) {\n            this.isScheduled = false;\n            toResolve.delete(this);\n        }\n    }\n    resume() {\n        if (!this.isComplete)\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","import { invariant } from 'motion-utils';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { isNone } from '../../animation/utils/is-none.mjs';\nimport { positionalKeys } from '../html/utils/keys-position.mjs';\nimport { makeNoneKeyframesAnimatable } from '../html/utils/make-none-animatable.mjs';\nimport { KeyframeResolver } from '../utils/KeyframesResolver.mjs';\nimport { getVariableValue } from './utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from './utils/is-css-variable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\nimport { findDimensionValueType } from './value-types/dimensions.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { isGenerator } from 'motion-dom';\nimport { warning } from 'motion-utils';\nimport { isAnimatable } from '../../utils/is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { time } from 'motion-dom';\nimport { flushKeyframeResolvers } from '../../render/utils/KeyframesResolver.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass BaseAnimation {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", ...options }) {\n        // Track whether the animation has been stopped. Stopped animations won't restart.\n        this.isStopped = false;\n        this.hasAttemptedResolve = false;\n        this.createdAt = time.now();\n        this.options = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            ...options,\n        };\n        this.updateFinishedPromise();\n    }\n    /**\n     * This method uses the createdAt and resolvedAt to calculate the\n     * animation startTime. *Ideally*, we would use the createdAt time as t=0\n     * as the following frame would then be the first frame of the animation in\n     * progress, which would feel snappier.\n     *\n     * However, if there's a delay (main thread work) between the creation of\n     * the animation and the first commited frame, we prefer to use resolvedAt\n     * to avoid a sudden jump into the animation.\n     */\n    calcStartTime() {\n        if (!this.resolvedAt)\n            return this.createdAt;\n        return this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n            ? this.resolvedAt\n            : this.createdAt;\n    }\n    /**\n     * A getter for resolved data. If keyframes are not yet resolved, accessing\n     * this.resolved will synchronously flush all pending keyframe resolvers.\n     * This is a deoptimisation, but at its worst still batches read/writes.\n     */\n    get resolved() {\n        if (!this._resolved && !this.hasAttemptedResolve) {\n            flushKeyframeResolvers();\n        }\n        return this._resolved;\n    }\n    /**\n     * A method to be called when the keyframes resolver completes. This method\n     * will check if its possible to run the animation and, if not, skip it.\n     * Otherwise, it will call initPlayback on the implementing class.\n     */\n    onKeyframesResolved(keyframes, finalKeyframe) {\n        this.resolvedAt = time.now();\n        this.hasAttemptedResolve = true;\n        const { name, type, velocity, delay, onComplete, onUpdate, isGenerator, } = this.options;\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!isGenerator && !canAnimate(keyframes, name, type, velocity)) {\n            // Finish immediately\n            if (instantAnimationState.current || !delay) {\n                onUpdate &&\n                    onUpdate(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.resolveFinishedPromise();\n                return;\n            }\n            // Finish after a delay\n            else {\n                this.options.duration = 0;\n            }\n        }\n        const resolvedAnimation = this.initPlayback(keyframes, finalKeyframe);\n        if (resolvedAnimation === false)\n            return;\n        this._resolved = {\n            keyframes,\n            finalKeyframe,\n            ...resolvedAnimation,\n        };\n        this.onPostResolved();\n    }\n    onPostResolved() { }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.currentFinishedPromise.then(resolve, reject);\n    }\n    flatten() {\n        if (!this.options.allowFlatten)\n            return;\n        this.options.type = \"keyframes\";\n        this.options.ease = \"linear\";\n    }\n    updateFinishedPromise() {\n        this.currentFinishedPromise = new Promise((resolve) => {\n            this.resolveFinishedPromise = resolve;\n        });\n    }\n}\n\nexport { BaseAnimation };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { mixNumber } from './number.mjs';\nimport { warning } from 'motion-utils';\nimport { hslaToRgba } from '../hsla-to-rgba.mjs';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { mixNumber as mixNumber$1 } from './number.mjs';\nimport { mixColor } from './color.mjs';\nimport { pipe } from '../pipe.mjs';\nimport { warning } from 'motion-utils';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { isCSSVariableToken } from '../../render/dom/utils/is-css-variable.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\nimport { mixImmediate } from './immediate.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { createGeneratorEasing, supportsLinearEasing, calcGeneratorDuration, maxGeneratorDuration, generateLinearEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = supportsLinearEasing() ? generatorOptions.ease : \"easeOut\";\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isBezierDefinition } from 'motion-dom';\nimport { invariant, noop } from 'motion-utils';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant, noop, progress } from 'motion-utils';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix/index.mjs';\nimport { pipe } from './pipe.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { frame, cancelFrame, frameData, time } from 'motion-dom';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { isGenerator, calcGeneratorDuration, activeAnimations } from 'motion-dom';\nimport { invariant, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { KeyframeResolver } from '../../render/utils/KeyframesResolver.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { mix } from '../../utils/mix/index.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { frameloopDriver } from './drivers/driver-frameloop.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\n\nconst generators = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nconst percentToProgress = (percent) => percent / 100;\n/**\n * Animation that runs on the main thread. Designed to be WAAPI-spec in the subset of\n * features we expose publically. Mostly the compatibility is to ensure visual identity\n * between both WAAPI and main thread animations.\n */\nclass MainThreadAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * The time at which the animation was cancelled.\n         */\n        this.cancelTime = null;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * The state of the animation to apply when the animation is resolved. This\n         * allows calls to the public API to control the animation before it is resolved,\n         * without us having to resolve it first.\n         */\n        this.pendingPlayState = \"running\";\n        /**\n         * The time at which the animation was started.\n         */\n        this.startTime = null;\n        this.state = \"idle\";\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = () => {\n            this.resolver.cancel();\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        const { name, motionValue, element, keyframes } = this.options;\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        const onResolved = (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe);\n        this.resolver = new KeyframeResolver$1(keyframes, onResolved, name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    flatten() {\n        super.flatten();\n        // If we've already resolved the animation, re-initialise it\n        if (this._resolved) {\n            Object.assign(this._resolved, this.initPlayback(this._resolved.keyframes));\n        }\n    }\n    initPlayback(keyframes$1) {\n        const { type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = this.options;\n        const generatorFactory = isGenerator(type)\n            ? type\n            : generators[type] || keyframes;\n        /**\n         * If our generator doesn't support mixing numbers, we need to replace keyframes with\n         * [0, 100] and then make a function that maps that to the actual keyframes.\n         *\n         * 100 is chosen instead of 1 as it works nicer with spring animations.\n         */\n        let mapPercentToKeyframes;\n        let mirroredGenerator;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            mapPercentToKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...this.options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            mirroredGenerator = generatorFactory({\n                ...this.options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        const resolvedDuration = calculatedDuration + repeatDelay;\n        const totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n        return {\n            generator,\n            mirroredGenerator,\n            mapPercentToKeyframes,\n            calculatedDuration,\n            resolvedDuration,\n            totalDuration,\n        };\n    }\n    onPostResolved() {\n        const { autoplay = true } = this.options;\n        activeAnimations.mainThread++;\n        this.play();\n        if (this.pendingPlayState === \"paused\" || !autoplay) {\n            this.pause();\n        }\n        else {\n            this.state = this.pendingPlayState;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { resolved } = this;\n        // If the animations has failed to resolve, return the final keyframe.\n        if (!resolved) {\n            const { keyframes } = this.options;\n            return { done: true, value: keyframes[keyframes.length - 1] };\n        }\n        const { finalKeyframe, generator, mirroredGenerator, mapPercentToKeyframes, keyframes, calculatedDuration, totalDuration, resolvedDuration, } = resolved;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay, repeat, repeatType, repeatDelay, onUpdate } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        // Update currentTime\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime =\n                Math.round(timestamp - this.startTime) * this.speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.speed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.speed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mapPercentToKeyframes) {\n            state.value = mapPercentToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.speed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        if (isAnimationFinished && finalKeyframe !== undefined) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    get duration() {\n        const { resolved } = this;\n        return resolved ? millisecondsToSeconds(resolved.calculatedDuration) : 0;\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.holdTime !== null || this.speed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.speed;\n        }\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (!this.resolver.isScheduled) {\n            this.resolver.resume();\n        }\n        if (!this._resolved) {\n            this.pendingPlayState = \"running\";\n            return;\n        }\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? this.calcStartTime();\n        }\n        else if (this.state === \"finished\") {\n            this.startTime = now;\n        }\n        if (this.state === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        this.cancelTime = this.startTime;\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        if (!this._resolved) {\n            this.pendingPlayState = \"paused\";\n            return;\n        }\n        this.state = \"paused\";\n        this.holdTime = this.currentTime ?? 0;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.pendingPlayState = this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        if (this.cancelTime !== null) {\n            this.tick(this.cancelTime);\n        }\n        this.teardown();\n        this.updateFinishedPromise();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        this.startTime = this.cancelTime = null;\n        this.resolver.cancel();\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(time) {\n        this.startTime = 0;\n        return this.tick(time, true);\n    }\n    get finished() {\n        return this.currentFinishedPromise;\n    }\n}\n// Legacy interface\nfunction animateValue(options) {\n    return new MainThreadAnimation(options);\n}\n\nexport { MainThreadAnimation, animateValue };\n","/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\n\nexport { acceleratedValues };\n","import { memo } from 'motion-utils';\n\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n\nexport { supportsWaapi };\n","import { supportsLinearEasing, startWaapiAnimation, attachTimeline, isGenerator, isWaapiSupportedEasing } from 'motion-dom';\nimport { millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { anticipate } from '../../easing/anticipate.mjs';\nimport { backInOut } from '../../easing/back.mjs';\nimport { circInOut } from '../../easing/circ.mjs';\nimport { DOMKeyframesResolver } from '../../render/dom/DOMKeyframesResolver.mjs';\nimport { BaseAnimation } from './BaseAnimation.mjs';\nimport { MainThreadAnimation } from './MainThreadAnimation.mjs';\nimport { acceleratedValues } from './utils/accelerated-values.mjs';\nimport { getFinalKeyframe } from './waapi/utils/get-final-keyframe.mjs';\nimport { supportsWaapi } from './waapi/utils/supports-waapi.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\n/**\n * Check if an animation can run natively via WAAPI or requires pregenerated keyframes.\n * WAAPI doesn't support spring or function easings so we run these as JS animation before\n * handing off.\n */\nfunction requiresPregeneratedKeyframes(options) {\n    return (isGenerator(options.type) ||\n        options.type === \"spring\" ||\n        !isWaapiSupportedEasing(options.ease));\n}\nfunction pregenerateKeyframes(keyframes, options) {\n    /**\n     * Create a main-thread animation to pregenerate keyframes.\n     * We sample this at regular intervals to generate keyframes that we then\n     * linearly interpolate between.\n     */\n    const sampleAnimation = new MainThreadAnimation({\n        ...options,\n        keyframes,\n        repeat: 0,\n        delay: 0,\n        isGenerator: true,\n    });\n    let state = { done: false, value: keyframes[0] };\n    const pregeneratedKeyframes = [];\n    /**\n     * Bail after 20 seconds of pre-generated keyframes as it's likely\n     * we're heading for an infinite loop.\n     */\n    let t = 0;\n    while (!state.done && t < maxDuration) {\n        state = sampleAnimation.sample(t);\n        pregeneratedKeyframes.push(state.value);\n        t += sampleDelta;\n    }\n    return {\n        times: undefined,\n        keyframes: pregeneratedKeyframes,\n        duration: t - sampleDelta,\n        ease: \"linear\",\n    };\n}\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nclass AcceleratedAnimation extends BaseAnimation {\n    constructor(options) {\n        super(options);\n        const { name, motionValue, element, keyframes } = this.options;\n        this.resolver = new DOMKeyframesResolver(keyframes, (resolvedKeyframes, finalKeyframe) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe), name, motionValue, element);\n        this.resolver.scheduleResolve();\n    }\n    initPlayback(keyframes, finalKeyframe) {\n        let { duration = 300, times, ease, type, motionValue, name, startTime, } = this.options;\n        /**\n         * If element has since been unmounted, return false to indicate\n         * the animation failed to initialised.\n         */\n        if (!motionValue.owner || !motionValue.owner.current) {\n            return false;\n        }\n        /**\n         * If the user has provided an easing function name that isn't supported\n         * by WAAPI (like \"anticipate\"), we need to provide the corressponding\n         * function. This will later get converted to a linear() easing function.\n         */\n        if (typeof ease === \"string\" &&\n            supportsLinearEasing() &&\n            isUnsupportedEase(ease)) {\n            ease = unsupportedEasingFunctions[ease];\n        }\n        /**\n         * If this animation needs pre-generated keyframes then generate.\n         */\n        if (requiresPregeneratedKeyframes(this.options)) {\n            const { onComplete, onUpdate, motionValue, element, ...options } = this.options;\n            const pregeneratedAnimation = pregenerateKeyframes(keyframes, options);\n            keyframes = pregeneratedAnimation.keyframes;\n            // If this is a very short animation, ensure we have\n            // at least two keyframes to animate between as older browsers\n            // can't animate between a single keyframe.\n            if (keyframes.length === 1) {\n                keyframes[1] = keyframes[0];\n            }\n            duration = pregeneratedAnimation.duration;\n            times = pregeneratedAnimation.times;\n            ease = pregeneratedAnimation.ease;\n            type = \"keyframes\";\n        }\n        const animation = startWaapiAnimation(motionValue.owner.current, name, keyframes, { ...this.options, duration, times, ease });\n        // Override the browser calculated startTime with one synchronised to other JS\n        // and WAAPI animations starting this event loop.\n        animation.startTime = startTime ?? this.calcStartTime();\n        if (this.pendingTimeline) {\n            attachTimeline(animation, this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        else {\n            /**\n             * Prefer the `onfinish` prop as it's more widely supported than\n             * the `finished` promise.\n             *\n             * Here, we synchronously set the provided MotionValue to the end\n             * keyframe. If we didn't, when the WAAPI animation is finished it would\n             * be removed from the element which would then revert to its old styles.\n             */\n            animation.onfinish = () => {\n                const { onComplete } = this.options;\n                motionValue.set(getFinalKeyframe(keyframes, this.options, finalKeyframe));\n                onComplete && onComplete();\n                this.cancel();\n                this.resolveFinishedPromise();\n            };\n        }\n        return {\n            animation,\n            duration,\n            times,\n            type,\n            ease,\n            keyframes: keyframes,\n        };\n    }\n    get duration() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { duration } = resolved;\n        return millisecondsToSeconds(duration);\n    }\n    get time() {\n        const { resolved } = this;\n        if (!resolved)\n            return 0;\n        const { animation } = resolved;\n        return millisecondsToSeconds(animation.currentTime || 0);\n    }\n    set time(newTime) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    get speed() {\n        const { resolved } = this;\n        if (!resolved)\n            return 1;\n        const { animation } = resolved;\n        return animation.playbackRate;\n    }\n    get finished() {\n        return this.resolved.animation.finished;\n    }\n    set speed(newSpeed) {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.playbackRate = newSpeed;\n    }\n    get state() {\n        const { resolved } = this;\n        if (!resolved)\n            return \"idle\";\n        const { animation } = resolved;\n        return animation.playState;\n    }\n    get startTime() {\n        const { resolved } = this;\n        if (!resolved)\n            return null;\n        const { animation } = resolved;\n        // Coerce to number as TypeScript incorrectly types this\n        // as CSSNumberish\n        return animation.startTime;\n    }\n    /**\n     * Replace the default DocumentTimeline with another AnimationTimeline.\n     * Currently used for scroll animations.\n     */\n    attachTimeline(timeline) {\n        if (!this._resolved) {\n            this.pendingTimeline = timeline;\n        }\n        else {\n            const { resolved } = this;\n            if (!resolved)\n                return noop;\n            const { animation } = resolved;\n            attachTimeline(animation, timeline);\n        }\n        return noop;\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        if (animation.playState === \"finished\") {\n            this.updateFinishedPromise();\n        }\n        animation.play();\n    }\n    pause() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation } = resolved;\n        animation.pause();\n    }\n    stop() {\n        this.resolver.cancel();\n        this.isStopped = true;\n        if (this.state === \"idle\")\n            return;\n        this.resolveFinishedPromise();\n        this.updateFinishedPromise();\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        const { animation, keyframes, duration, type, ease, times } = resolved;\n        if (animation.playState === \"idle\" ||\n            animation.playState === \"finished\") {\n            return;\n        }\n        /**\n         * WAAPI doesn't natively have any interruption capabilities.\n         *\n         * Rather than read commited styles back out of the DOM, we can\n         * create a renderless JS animation and sample it twice to calculate\n         * its current value, \"previous\" value, and therefore allow\n         * Motion to calculate velocity for any subsequent animation.\n         */\n        if (this.time) {\n            const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n            const sampleAnimation = new MainThreadAnimation({\n                ...options,\n                keyframes,\n                duration,\n                type,\n                ease,\n                times,\n                isGenerator: true,\n            });\n            const sampleTime = secondsToMilliseconds(this.time);\n            motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        }\n        const { onStop } = this.options;\n        onStop && onStop();\n        this.cancel();\n    }\n    complete() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.finish();\n    }\n    cancel() {\n        const { resolved } = this;\n        if (!resolved)\n            return;\n        resolved.animation.cancel();\n    }\n    static supports(options) {\n        const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n        if (!motionValue ||\n            !motionValue.owner ||\n            !(motionValue.owner.current instanceof HTMLElement)) {\n            return false;\n        }\n        const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n        return (supportsWaapi() &&\n            name &&\n            acceleratedValues.has(name) &&\n            (name !== \"transform\" || !transformTemplate) &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !onUpdate &&\n            !repeatDelay &&\n            repeatType !== \"mirror\" &&\n            damping !== 0 &&\n            type !== \"inertia\");\n    }\n}\n\nexport { AcceleratedAnimation };\n","import { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, GroupAnimationWithThen } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { AcceleratedAnimation } from '../animators/AcceleratedAnimation.mjs';\nimport { MainThreadAnimation } from '../animators/MainThreadAnimation.mjs';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    let options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        options = {\n            ...options,\n            ...getDefaultTransition(name, options),\n        };\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    if (options.duration) {\n        options.duration = secondsToMilliseconds(options.duration);\n    }\n    if (options.repeatDelay) {\n        options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n    }\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (instantAnimationState.current ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            // We still want to return some animation controls here rather\n            // than returning undefined\n            return new GroupAnimationWithThen([]);\n        }\n    }\n    /**\n     * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n     * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n     * optimised animation.\n     */\n    if (!isHandoff && AcceleratedAnimation.supports(options)) {\n        return new AcceleratedAnimation(options);\n    }\n    else {\n        return new MainThreadAnimation(options);\n    }\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from '../../utils/mix/number.mjs';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, setDragLock } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from '../../render/dom/utils/is-css-variable.mjs';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations } from 'motion-dom';\nimport { SubscriptionManager, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop());\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from 'motion-dom';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(target))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (!isValidPressEvent(endEvent) || !isPressing.has(target)) {\n                return;\n            }\n            isPressing.delete(target);\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (target instanceof HTMLElement) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/keys-transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { transformPropOrder } from './keys-transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\nimport { buildTransform } from './build-transform.mjs';\nimport { transformProps } from './keys-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function updateSVGDimensions(instance, renderState) {\n    try {\n        renderState.dimensions =\n            typeof instance.getBBox === \"function\"\n                ? instance.getBBox()\n                : instance.getBoundingClientRect();\n    }\n    catch (e) {\n        // Most likely trying to measure an unrendered element under Firefox\n        renderState.dimensions = {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0,\n        };\n    }\n}\n\nexport { updateSVGDimensions };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { transformPropOrder } from '../../html/utils/keys-transform.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { frame } from 'motion-dom';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time, frame, cancelFrame, motionValue } from 'motion-dom';\nimport { warnOnce, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { motionValue } from 'motion-dom';\nimport { warnOnce } from 'motion-utils';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.7.4\", `Attempting to mix Motion versions ${nextValue.version} with 12.7.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { readTransformValue } from './utils/parse-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { frame } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n        this.updateDimensions = () => {\n            if (this.current && !this.renderState.dimensions) {\n                updateSVGDimensions(this.current, this.renderState);\n            }\n        };\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    onBindTransform() {\n        if (this.current && !this.renderState.dimensions) {\n            frame.postRender(this.updateDimensions);\n        }\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","'use client';\n\nimport PropTypes from 'prop-types';\nimport createBox from '../createBox';\nconst Box = createBox();\nprocess.env.NODE_ENV !== \"production\" ? Box.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Box;","import React, { useState, useRef, useCallback } from 'react';\nimport { motion } from 'framer-motion';\nimport { styled } from '@mui/material/styles';\nimport { Typography } from '@mui/material';\nimport { Box } from '@mui/system';\nimport { Button } from '@mui/material';\nimport { Dialog, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\nimport { useEffect } from 'react';\nimport { steelBlue, white } from '../../constants/colors';\n\n// Sample event data (replace with your actual data source)\nconst eventsData = [\n    {\n        id: '1',\n        month: 1,\n        title: 'New Year Celebration',\n        date: '2024-01-01',\n        summary: 'Celebrate the start of the new year!',\n        description: 'Join us for a festive celebration with fireworks, music, and dancing.',\n        imageUrl: 'https://placehold.co/600x400/EEE/31343C',\n    },\n    {\n        id: '2',\n        month: 1,\n        title: 'January Event 2',\n        date: '2024-01-15',\n        summary: 'Another event in January',\n        description: 'Details for the second January event.',\n        imageUrl: 'https://placehold.co/600x400/EEE/31343C',\n    },\n    {\n        id: '3',\n        month: 2,\n        title: 'Valentine\\'s Day',\n        date: '2024-02-14',\n        summary: 'Celebrate love and affection.',\n        description: 'A romantic evening with dinner and music.',\n        imageUrl: 'https://placehold.co/600x400/EEE/31343C',\n    },\n    {\n        id: '4',\n        month: 3,\n        title: 'St. Patrick\\'s Day',\n        date: '2024-03-17',\n        summary: 'Celebrate Irish culture!',\n        description: 'Join the parade and enjoy traditional Irish food and drinks.',\n        imageUrl: 'https://placehold.co/600x400/EEE/31343C',\n    },\n    {\n        id: '5',\n        month: 3,\n        title: 'March Event 2',\n        date: '2024-03-25',\n        summary: 'A second event in March',\n        description: 'More March details',\n        imageUrl: 'https://placehold.co/600x400/EEE/31343C',\n    },\n    {\n        id: '6',\n        month: 4,\n        title: 'April Fools\\' Day',\n        date: '2024-04-01',\n        summary: 'Get ready for some pranks!',\n        description: 'A day of fun and laughter.',\n        imageUrl: 'https://placehold.co/600x400/EEE/31343C',\n    },\n    {\n        id: '7',\n        month: 5,\n        title: 'Cinco de Mayo',\n        date: '2024-05-05',\n        summary: 'Celebrate Mexican heritage.',\n        description: 'Enjoy Mexican food, music, and dancing.',\n        imageUrl: 'https://placehold.co/600x400/EEE/31343C',\n    },\n    {\n        id: '8',\n        month: 5,\n        title: 'Mother\\'s Day',\n        date: '2024-05-12',\n        summary: 'Honor mothers and motherhood.',\n        description: 'A day to celebrate the special women in our lives.',\n        imageUrl: 'https://placehold.co/600x400/EEE/31343C',\n    },\n    {\n        id: '9',\n        month: 6,\n        title: 'Father\\'s Day',\n        date: '2024-06-16',\n        summary: 'Celebrate fatherhood.',\n        description: 'A day to honor fathers and father figures.',\n        imageUrl: 'https://placehold.co/600x400/EEE/31343C',\n    },\n    {\n        id: '10',\n        month: 7,\n        title: 'Independence Day',\n        date: '2024-07-04',\n        summary: 'Celebrate freedom and independence!',\n        description: 'Fireworks, parades, and patriotic festivities.',\n        imageUrl: 'https://placehold.co/600x400/EEE/31343C',\n    },\n    // {\n    //     id: '11',\n    //     month: 8,\n    //     title: 'August Event',\n    //     date: '2024-08-10',\n    //     summary: 'August summary',\n    //     description: 'August description',\n    //     imageUrl: 'https://placehold.co/600x400/EEE/31343C'\n    // },\n    {\n        id: '12',\n        month: 9,\n        title: 'September Event',\n        date: '2024-09-10',\n        summary: 'September summary',\n        description: 'September description',\n        imageUrl: 'https://placehold.co/600x400/EEE/31343C'\n    },\n    {\n        id: '13',\n        month: 10,\n        title: 'October Event',\n        date: '2024-10-10',\n        summary: 'October summary',\n        description: 'October description',\n        imageUrl: 'https://placehold.co/600x400/EEE/31343C'\n    },\n    {\n        id: '14',\n        month: 11,\n        title: 'November Event',\n        date: '2024-11-10',\n        summary: 'November summary',\n        description: 'November description',\n        imageUrl: 'https://placehold.co/600x400/EEE/31343C'\n    },\n    {\n        id: '15',\n        month: 12,\n        title: 'December Event',\n        date: '2024-12-10',\n        summary: 'December summary',\n        description: 'December description',\n        imageUrl: 'https://placehold.co/600x400/EEE/31343C'\n    },\n    {\n        id: '16',\n        month: 12,\n        title: 'Christmas',\n        date: '2024-12-25',\n        summary: 'Celebrate the birth of Jesus.',\n        description: 'A time for family, gifts, and joy.',\n        imageUrl: 'https://placehold.co/600x400/EEE/31343C'\n    }\n];\n\n// Styled Components for better UI\nconst TwoColumnContainer = styled(Box)({\n    display: 'flex',\n    height: '600px',\n    width: '100%',\n    overflow: 'hidden',\n    // backgroundColor: '#f5f5f5',\n    padding: '16px',\n    gap: '20px',\n    '@media (max-width: 600px)': {  // Added media query for small screens\n        flexDirection: 'column',\n        height: 'auto',\n    },\n});\n\nconst MonthColumn = styled(Box)({\n    flex: '0 0 150px',\n    overflowY: 'auto',\n    paddingRight: '10px',\n    // paddingTop: '65px',\n    '&::-webkit-scrollbar': {\n        width: '8px',\n    },\n    '&::-webkit-scrollbar-track': {\n        background: '#f1f1f1',\n    },\n    '&::-webkit-scrollbar-thumb': {\n        backgroundColor: '#888',\n        borderRadius: '4px',\n    },\n    '&::-webkit-scrollbar-thumb:hover': {\n        background: '#555',\n    },\n    '@media (max-width: 600px)': {  // Added media query for small screens\n        flex: '0 0 auto',\n        width: '100%',\n        borderRight: 'none',\n        borderBottom: '1px solid #ccc',\n        paddingBottom: '10px',\n        marginBottom: '10px',\n        overflowX: 'auto; overflowY: hidden;',\n        whiteSpace: 'nowrap',\n    },\n});\n\nconst EventsColumn = styled(Box)({\n    flex: '1',\n    overflowY: 'auto',\n    paddingLeft: '10px',\n    '&::-webkit-scrollbar': {\n        width: '8px',\n    },\n    '&::-webkit-scrollbar-track': {\n        background: '#f1f1f1',\n    },\n    '&::-webkit-scrollbar-thumb': {\n        backgroundColor: '#888',\n        borderRadius: '4px',\n    },\n    '&::-webkit-scrollbar-thumb:hover': {\n        background: '#555',\n    },\n    '@media (max-width: 600px)': {  // Added media query for small screens\n        paddingLeft: '0px',\n    },\n});\n\nconst MonthButton = styled(Button, {\n    shouldForwardProp: (prop) => prop !== 'isHighlighted',\n})(({ theme, isHighlighted }) => ({\n    display: 'block',\n    width: '100%',\n    textAlign: 'left',\n    padding: '4px 4px',\n    borderRadius: '4px',\n    marginBottom: '4px',\n    backgroundColor: 'transparent',\n    color: isHighlighted ? theme.palette.primary.main : theme.palette.text.primary,\n    fontWeight: isHighlighted ? 'bold' : 'normal',\n    '&:hover': {\n        backgroundColor: 'rgba(0, 0, 0, 0.04)',\n    },\n    '@media (max-width: 600px)': {  // Added media query for small screens\n        display: 'inline-block',\n        width: 'auto',\n        marginRight: '10px',\n        marginBottom: '0px',\n    },\n}));\n\nconst EventCard = styled(motion.div)(({ theme }) => ({\n    backgroundColor: white,\n    color: '#FFD700',\n    borderRadius: '8px',\n    boxShadow: '0 2px 4px rgba(0, 0, 0, 0.08)',\n    marginBottom: '16px',\n    padding: '16px',\n    transition: 'transform 0.2s ease-in-out',\n    '&:hover': {\n        transform: 'scale(1.02)',\n    },\n}));\n\nconst EventImage = styled('img')({\n    width: '80%',\n    height: 'auto',\n    borderRadius: '4px',\n    cursor: 'pointer',\n    marginBottom: '12px',\n});\n\nconst EventTitle = styled(Typography)({\n    fontSize: '1.2rem',\n    fontWeight: 'bold',\n    marginBottom: '8px',\n    color: steelBlue,\n});\n\nconst EventDate = styled(Typography)({\n    fontSize: '0.9rem',\n    color: 'darkslategray',\n    marginBottom: '4px',\n});\n\nconst EventSummary = styled(Typography)({\n    fontSize: '1rem',\n    color: 'darkslategray',\n    marginBottom: '12px',\n});\n\nconst EventDescription = styled(Typography)({\n    fontSize: '1rem',\n    color: 'darkslategray',\n    lineHeight: 1.6,\n    '& img': {\n        cursor: 'pointer',\n        maxWidth: '100%',\n        height: 'auto',\n        borderRadius: '4px',\n        margin: '8px 0',\n    }\n});\n\nconst EventsList = ({language}) => {\n    const [selectedMonth, setSelectedMonth] = useState(null);\n    const eventsColumnRef = useRef(null);\n    const [openImage, setOpenImage] = useState(null);\n\n    const months = [\n        { number: 1, name: language == 'en' ? 'January' : 'Січень' },\n        { number: 2, name: language == 'en' ? 'February' : 'Лютий' },\n        { number: 3, name: language == 'en' ? 'March' : 'Березень' },\n        { number: 4, name: language == 'en' ? 'April' : 'Квітень' },\n        { number: 5, name: language == 'en' ? 'May' : 'Травень' },\n        { number: 6, name: language == 'en' ? 'June' : 'Червень' },\n        { number: 7, name: language == 'en' ? 'July' : 'Липень' },\n        { number: 8, name: language == 'en' ? 'August' : 'Серпень' },\n        { number: 9, name: language == 'en' ? 'September' : 'Вересень' },\n        { number: 10, name: language == 'en' ? 'October' : 'Жовтень' },\n        { number: 11, name: language == 'en' ? 'November' : 'Листопад' },\n        { number: 12, name: language == 'en' ? 'December' : 'Грудень' },\n    ];\n\n    const scrollToMonth = useCallback(\n        (month) => {\n            setSelectedMonth(month);\n            if (eventsColumnRef.current) {\n                const targetEvent = document.getElementById(`month-${month}`);\n                if (targetEvent) {\n                    targetEvent.scrollIntoView({ behavior: 'smooth', block: 'start' });\n                }\n            }\n        },\n        []\n    );\n\n    const getMonthEvents = (month) => {\n        return eventsData.filter((event) => event.month === month);\n    };\n\n    const highlightedMonths = months.map((month) => ({\n        ...month,\n        hasEvents: eventsData.some((event) => event.month === month.number),\n    }));\n\n\n    const handleImageClick = (imageUrl) => {\n        setOpenImage(imageUrl);\n    };\n\n    const filteredEvents = eventsData//selectedMonth ? getMonthEvents(selectedMonth) : eventsData;\n\n      //Fixes \"document is not defined\" during build\n    const [isClient, setIsClient] = useState(false);\n    useEffect(() => {\n        setIsClient(true);\n    }, []);\n\n    if (!isClient) {\n        return null;\n    }\n\n\n    return (\n        <Box sx={{ width: '80%', maxWidth: '1000px', backgroundColor: '#ffffff', padding: 2, borderRadius: '8px', boxShadow: 2, paddingTop: '70px', paddingBottom: 5, margin: '0 auto'}} justifySelf={'center'}>\n        <TwoColumnContainer>\n            <MonthColumn alignContent={'center'}>\n                {highlightedMonths.map((month) => (\n                    <MonthButton\n                        key={month.number}\n                        isHighlighted={month.hasEvents}\n                        onClick={() => scrollToMonth(month.number)}\n                        disabled={!month.hasEvents}\n                    >\n                        <Typography fontSize={'10pt'}>\n                        {month.name}\n                        </Typography>\n                    </MonthButton>\n                ))}\n            </MonthColumn>\n            <EventsColumn ref={eventsColumnRef}>\n                {filteredEvents.map((event) => (\n                    <EventCard\n                        key={event.id}\n                        initial={{ opacity: 0, y: 20 }}\n                        animate={{ opacity: 1, y: 0 }}\n                        transition={{ duration: 0.3 }}\n                        id={`month-${event.month}`}\n                    >\n                        <center><EventImage\n                            src={event.imageUrl}\n                            alt={event.title}\n                            onClick={() => handleImageClick(event.imageUrl)}\n                        />\n                        </center>\n                        <EventTitle>{event.title}</EventTitle>\n                        <EventDate>Date: {event.date}</EventDate>\n                        <EventSummary>{event.summary}</EventSummary>\n                        <EventDescription\n                            dangerouslySetInnerHTML={{\n                                __html: event.description.replace(\n                                    /<img.*?src=\"(.*?)\".*?>/g,\n                                    (match, src) =>\n                                        `<img src=\"${src}\" onclick=\"this.dispatchEvent(new CustomEvent('imageclick', {bubbles: true, detail: {src: '${src}'}}));\" style=\"cursor:pointer;\" />`\n                                ),\n                            }}\n                           onClick={(e) => {\n                                if (e.target.tagName === 'IMG') {\n                                     handleImageClick(e.target.src);\n                                }\n                            }}\n                        />\n                    </EventCard>\n                ))}\n            </EventsColumn>\n             <Dialog\n                open={!!openImage}\n                onClose={() => setOpenImage(null)}\n                maxWidth=\"md\"\n                fullWidth\n            >\n                <DialogTitle>Image Preview</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        <img\n                            src={openImage}\n                            alt=\"Full Size\"\n                            style={{ width: '100%', height: 'auto' }}\n                        />\n                    </DialogContentText>\n                </DialogContent>\n            </Dialog>\n        </TwoColumnContainer>\n        </Box>\n    );\n};\n\nexport default EventsList;\n","import * as React from \"react\"\nimport {useState, useEffect} from \"react\"\n\nimport Layout from \"../components/layout\"\nimport { Footer } from \"../components/Footer\"\nimport { EVENTS_CONTENT } from \"../constants/content/events\"\nimport { Grid, Box, Stack, Divider, Typography } from \"@mui/material\";\nimport EventsList from \"../components/EventList\"\n\n\nconst Events = () => {\n  return (\n    <Layout>\n        <EventsList />\n        <Box\n            sx={{\n            position: \"fixed\",\n            bottom: \"0\",\n            left: 0,\n            width: \"100%\",\n            }}\n        >\n            <Footer />\n        </Box>\n    </Layout>\n  );\n};\nexport default Events","import React from \"react\"\nimport { Instagram, Facebook, Twitter, Email } from \"@mui/icons-material\";\n\nimport * as styles from \"../index.module.css\"\nimport { Typography, Box } from \"@mui/material\";\nimport { steelBlue, white } from \"../../constants/colors\";\n\nconst Footer = () => (\n  <footer\n    style={{\n      marginTop: `var(--space-5)`,\n      fontSize: `var(--font-sm)`,\n      background: steelBlue,\n      color: white,\n      height: 50,\n      textAlign: \"center\",\n    }}\n  >\n    <Box\n      display=\"flex\"\n      justifyContent=\"center\"\n      alignContent=\"center\"\n      paddingTop={2}\n    >\n      <Typography fontSize={12}>\n        Copyright © 2025 St. John the Baptist Ukrainian Catholic Church\n        Whippany, NJ 07981\n      </Typography>\n      {/* <Facebook fontSize=\"small\" className={styles.iconLG} /> */}\n    </Box>\n  </footer>\n);\n\nexport { Footer }"],"names":["createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","args","get","_target","key","has","set","isAnimationControls","v","start","getValueState","visualElement","state","values","forEach","value","getVelocity","resolveVariantFromProps","props","definition","custom","current","velocity","undefined","variants","resolveVariant","getProps","getValueTransition","transition","noop","any","MotionGlobalConfig","skipAnimations","useManualTiming","stepsOrder","statsBuffer","addProjectionMetrics","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","flagRunNextFrame","steps","reduce","acc","stepName","thisFrame","Set","nextFrame","flushNextFrame","toKeepAlive","WeakSet","latestFrameData","numCalls","triggerCallback","callback","step","schedule","keepAlive","immediate","queue","add","cancel","delete","process","frameData","frameloop","push","clear","createRenderStep","read","resolveKeyframes","update","preRender","render","postRender","processBatch","performance","now","Math","max","min","i","length","cancelFrame","frameSteps","requestAnimationFrame","transformPropOrder","transformProps","positionalKeys","addUniqueItem","arr","item","indexOf","removeItem","index","splice","SubscriptionManager","constructor","this","subscriptions","handler","notify","a","b","c","numSubscriptions","getSize","velocityPerSecond","frameDuration","clearTime","time","newTime","queueMicrotask","collectMotionValues","MotionValue","init","options","version","canTrackVelocity","events","updateAndNotify","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","renderRequest","hasAnimated","owner","isNaN","parseFloat","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","getPrevious","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","isKeyframesTarget","Array","isArray","setMotionValue","hasValue","getValue","addValue","isMotionValue","Boolean","addValueToWillChange","willChange","WillChange","newWillChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","memo","result","supportsScrollTimeline","window","ScrollTimeline","GroupAnimation","animations","runAll","filter","finished","all","map","getAll","propName","setAll","newValue","attachTimeline","timeline","fallback","speed","startTime","duration","methodName","controls","flatten","play","pause","complete","GroupAnimationWithThen","onResolve","_onReject","finally","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isGenerator","type","isBezierDefinition","easing","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","document","createElement","animate","opacity","e","cubicBezierAsString","d","supportedWaapiEasing","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","isWaapiSupportedEasing","every","activeAnimations","layout","mainThread","waapi","generateLinearEasing","resolution","points","numPoints","round","substring","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","element","valueName","keyframes","delay","repeat","repeatType","times","pseudoElement","keyframeOptions","offset","fill","iterations","direction","onfinish","calcBezier","t","a1","a2","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","mirrorEasing","p","reverseEasing","backInOut","anticipate","pow","sin","acos","circInOut","isZeroValueString","test","clamp","number","parse","transform","alpha","scale","default","sanitize","floatRegex","singleColorRegex","isColorString","testProp","startsWith","isNullish","Object","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","hsla","hue","saturation","lightness","color","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","complexRegex","analyseComplexValue","originalValue","toString","indexes","var","types","parsedValue","parseComplexValue","createTransformer","source","numSections","output","convertNumbersToZero","complex","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","name","slice","defaultValue","functionRegex","functions","join","browserNumberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","transformValueTypes","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","y","z","perspective","transformPerspective","originX","originY","originZ","numberValueTypes","zIndex","size","fillOpacity","strokeOpacity","numOctaves","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","radToDeg","rad","PI","angle","atan2","rebaseAngle","matrix2dParsers","atan","sqrt","matrix3dParsers","defaultTransformValue","includes","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","trim","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","_bbox","toResolve","isScheduled","anyNeedsMeasurement","measureAllKeyframes","resolversToMeasure","from","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","onComplete","isAsync","isComplete","scheduleResolve","currentValue","finalKeyframe","valueAsRead","readValue","setFinalKeyframe","renderEndStyles","resume","isNumericalString","checkStringStartsWith","token","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","splitCSSVariableRegex","getVariableValue","depth","exec","token1","token2","parseCSSVariable","resolved","getComputedStyle","getPropertyValue","trimmed","testValueType","dimensionValueTypes","findDimensionValueType","find","DOMKeyframesResolver","super","keyframe","resolveNoneKeyframes","origin","target","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureViewportBox","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","isAnimatable","canAnimate","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","isNotNull","getFinalKeyframe","resolvedKeyframes","BaseAnimation","autoplay","repeatDelay","isStopped","hasAttemptedResolve","createdAt","updateFinishedPromise","calcStartTime","resolvedAt","_resolved","onKeyframesResolved","onUpdate","resolveFinishedPromise","resolvedAnimation","initPlayback","onPostResolved","reject","currentFinishedPromise","allowFlatten","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","mixNumber","to","progress","hueToRgb","q","mixImmediate","mixLinearColor","fromExpo","expo","colorTypes","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","combineFunctions","pipe","transformers","invisibleValues","getMixer","mixComplex","mixArray","mixObject","numValues","blendValue","template","originStats","targetStats","mixVisibility","orderedOrigin","pointers","originIndex","originValue","matchOrder","mix","mixer","calcGeneratorVelocity","resolveValue","prevT","springDefaults","granular","safeMin","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","keys","some","spring","optionsOrVisualDuration","visualDuration","restSpeed","restDelta","isResolvedFromDuration","springOptions","root","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","calculatedDuration","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toTransition","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","latest","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","applyToOptions","generatorOptions","createGenerator","createGeneratorEasing","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","toFromDifference","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","keyframeValues","easingFunctions","isEasingArray","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","frameloopDriver","passTimestamp","generators","decay","tween","percentToProgress","MainThreadAnimation","holdTime","cancelTime","playbackSpeed","pendingPlayState","teardown","onStop","KeyframeResolver$1","assign","keyframes$1","generatorFactory","mapPercentToKeyframes","mirroredGenerator","resolvedDuration","totalDuration","tick","sample","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","driver","newSpeed","hasChanged","onPlay","stopDriver","acceleratedValues","supportsWaapi","Element","unsupportedEasingFunctions","AcceleratedAnimation","pregeneratedAnimation","sampleAnimation","pregeneratedKeyframes","pregenerateKeyframes","pendingTimeline","playbackRate","playState","sampleTime","supports","HTMLElement","transformTemplate","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","isHandoff","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","arguments","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isDragging","isDragActive","addDomEvent","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","isRefObject","ref","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","style","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","microtask","cancelMicrotask","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","applyTo","boxShadow","compareByDepth","FlatTree","children","isDirty","timeout","checkElapsed","resolveMotionValue","unwrappedValue","toValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","setupGesture","elementOrSelector","elements","scope","selectorCache","EventTarget","querySelectorAll","resolveElements","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","tabIndex","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionConfigContext","isStatic","reducedMotion","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","isBrowser","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useIsomorphicLayoutEffect","useLayoutEffect","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","layoutCrossfade","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","lowercaseSVGElements","isSVGComponent","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","useConstant","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","htmlMotionConfig","updateSVGDimensions","getBBox","renderHTML","setProperty","camelCaseAttributes","renderSVG","_styleProp","setAttribute","charAt","layoutProps","svgMotionConfig","needsMeasure","createMotionComponentFactory","prefersReducedMotion","hasReducedMotionListener","valueTypes","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","HTMLVisualElement","readTransformValue","computedStyle","SVGVisualElement","updateDimensions","defaultType","getAttribute","motion","eventsData","month","title","date","summary","description","imageUrl","TwoColumnContainer","styled","Box","overflow","gap","flexDirection","MonthColumn","flex","overflowY","background","borderRight","borderBottom","overflowX","whiteSpace","EventsColumn","MonthButton","Button","shouldForwardProp","theme","isHighlighted","textAlign","palette","primary","main","text","fontWeight","EventCard","div","white","EventImage","cursor","EventTitle","Typography","fontSize","steelBlue","EventDate","EventSummary","EventDescription","lineHeight","language","selectedMonth","setSelectedMonth","useState","eventsColumnRef","openImage","setOpenImage","months","scrollToMonth","targetEvent","getElementById","scrollIntoView","behavior","block","highlightedMonths","hasEvents","handleImageClick","filteredEvents","isClient","setIsClient","sx","justifySelf","alignContent","onClick","src","alt","dangerouslySetInnerHTML","__html","Dialog","open","onClose","fullWidth","DialogTitle","DialogContent","DialogContentText","Footer","justifyContent"],"sourceRoot":""}