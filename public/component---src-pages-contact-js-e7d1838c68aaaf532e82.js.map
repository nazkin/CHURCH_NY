{"version":3,"file":"component---src-pages-contact-js-e7d1838c68aaaf532e82.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/@mui/icons-material/ContentCopy.js","webpack://gatsby-starter-default/./src/constants/content/contact.js","webpack://gatsby-starter-default/./node_modules/@emailjs/browser/es/store/store.js","webpack://gatsby-starter-default/./node_modules/@emailjs/browser/es/utils/validateParams.js","webpack://gatsby-starter-default/./node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","webpack://gatsby-starter-default/./node_modules/@emailjs/browser/es/api/sendPost.js","webpack://gatsby-starter-default/./node_modules/@emailjs/browser/es/index.js","webpack://gatsby-starter-default/./node_modules/@emailjs/browser/es/methods/init/init.js","webpack://gatsby-starter-default/./node_modules/@emailjs/browser/es/methods/send/send.js","webpack://gatsby-starter-default/./node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","webpack://gatsby-starter-default/./src/constants/info.js","webpack://gatsby-starter-default/./src/pages/contact.js"],"sourcesContent":["\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\"\n}), 'ContentCopy');\nexports.default = _default;","export const CONTACT_CONTENT = {\n    en: {\n        title: \"Contact Our Church\",\n        submitBtn: \"Submit\",\n        nameInput: \"Name\",\n        emailInput: \"Email\",\n        phoneLabel: \"Tel:\",\n        phoneInput: \"Phone\",\n        messageInput: \"Message\",\n        successMsg: \"Contact message was sent successfully. Thank you!\",\n        errorMsg: \"Unable to send the contact message. Please try again !\",\n        copyEmail: \"Copy email\",\n        copyAddress: \"Copy address\",\n    },\n    ua: {\n        title: \"Зв'язатись з Нашою Церквою\",\n        submitBtn: \"Надіслати\",\n        nameInput: \"Ім'я\",\n        emailInput: \"Електронна Пошта\",\n        phoneLabel: \"Тел:\",\n        phoneInput: \"Телефон\",\n        messageInput: \"Повідомлення\",\n        successMsg: \"Повідомлення надіслано! Дякуємо!\",\n        errorMsg: \"Помилка при надсиланні повідомлення. Перегляньте всі поля форми і спробуйте ще раз.\",\n        copyEmail: \"Скопіювати Електронну Адресу\",\n        copyAddress: \"Скопіювати Адресу\",\n    }\n}\n","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} publicKey - set the EmailJS public key\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (publicKey, origin = 'https://api.emailjs.com') => {\n    store._userID = publicKey;\n    store._origin = origin;\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, publicKey) => {\n    const uID = publicKey || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.11.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.11.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","export const PHONE_NUMBER = \"(973) 887-3616\"\nexport const EMAIL = \"stjohnukrcc@gmail.com\"\nexport const ADDRESS_LINE_1 = \"60 N. Jefferson Rd.\"\nexport const ADDRESS_LINE_2 = \"Whippany, NJ 07981\"","import React, { useState, useEffect } from 'react';\nimport { Link } from \"gatsby\"\n\nimport {\n  Grid,\n  Alert,\n  TextField,\n  Button,\n  Box,\n  Typography,\n  Tooltip,\n  IconButton,\n  Stack\n} from '@mui/material'\nimport emailjs from '@emailjs/browser'\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy';\n\nimport Layout from \"../components/layout\"\nimport { Footer } from \"../components/Footer\"\nimport Seo from \"../components/seo\"\nimport { CONTACT_CONTENT } from '../constants/content/contact'\nimport { GENERAL_CONTENT } from '../constants/content/general'\nimport { ADDRESS_LINE_1, ADDRESS_LINE_2, PHONE_NUMBER, EMAIL } from '../constants/info'\n\nconst SERVICE = 'service_mhbcm0d'\nconst TEMPLATE = 'template_smhk7ll'\nconst PUBLIC_KEY = 'qMiZK74sZIp_Lm_UE'\n\nconst ContactInfo = ({ language }) => {\n  const [isClient, setIsClient] = useState(false);\n  const churchName = GENERAL_CONTENT[language].name\n  const pastorName = GENERAL_CONTENT[language].pastor\n\n  useEffect(() => {\n    // Ensure that the code runs only on the client-side\n    setIsClient(true);\n  }, []);\n\n  const handleCopyAddress = () => {\n    if (isClient && navigator.clipboard) {\n      navigator.clipboard.writeText(`${ADDRESS_LINE_1} ${ADDRESS_LINE_2}`)\n    }\n  };\n\n  const handleCopyEmail = () => {\n    if (isClient && navigator.clipboard) {\n      navigator.clipboard.writeText(`${EMAIL}`)\n    }\n  };\n\n  return <Box>\n    <Box paddingBottom={\"10pt\"}>\n    <Typography fontWeight={500} fontSize={18}>\n      {churchName}\n    </Typography>\n    </Box>\n    <Box paddingBottom={\"10pt\"} alignItems={\"center\"}>\n      <Stack width=\"100%\" direction=\"row\" display={\"flex\"} justifyContent={\"left\"} alignItems={\"center\"} gap={1}>\n        <Typography fontWeight={400} fontSize={15}>\n          {ADDRESS_LINE_1}{' '}{ADDRESS_LINE_2}\n        </Typography>\n        <Tooltip title={CONTACT_CONTENT[language].copyAddress}>\n          <IconButton onClick={handleCopyAddress()} sx={{ padding: 0, fontSize: 18 }}>\n            <ContentCopyIcon sx={{ fontSize: \"inherit\" }}/>\n          </IconButton>\n        </Tooltip>\n      </Stack>\n    </Box>\n    <Box paddingBottom={\"20pt\"}>\n      <Typography fontWeight={400} fontSize={15}>\n        {CONTACT_CONTENT[language].phoneLabel}{' '}{PHONE_NUMBER}\n      </Typography>\n      <Stack width=\"100%\" direction=\"row\" display={\"flex\"} justifyContent={\"left\"} alignItems={\"center\"} gap={1}>\n      <Typography fontWeight={400} fontSize={15}>\n        {EMAIL}\n      </Typography>\n        <Tooltip title={CONTACT_CONTENT[language].copyEmail}>\n            <IconButton onClick={handleCopyEmail()} sx={{ padding: 0, fontSize: 18 }}>\n              <ContentCopyIcon sx={{ fontSize: \"inherit\" }}/>\n            </IconButton>\n        </Tooltip>\n      </Stack>\n    </Box>\n    <Box>\n    <Typography fontWeight={400} fontSize={15}>\n        {GENERAL_CONTENT[language].pastorLabel}{' - '}{pastorName}\n      </Typography>\n    </Box>\n  </Box>\n}\n\nconst ContactForm = ({ language }) => {\n\n  const [name, setName] = React.useState(\"\")\n  const [email, setEmail] = React.useState(\"\")\n  const [phone, setPhone] = React.useState(\"\")\n  const [message, setMessage] = React.useState(\"\")\n  const [success, setSuccess] = React.useState(false)\n  const [error, setError] = React.useState(false)\n\n  React.useEffect(() => {\n\n    setTimeout(() => {\n      setSuccess(false)\n      setError(false)\n    }, 15000)\n\n  }, [message]);\n\n  const onSubmit = (e) => {\n    e.preventDefault()\n    const params = {\n      name,\n      email,\n      \"user_phone\": phone,\n      \"user_msg\": message\n    }\n\n    emailjs.send(SERVICE, TEMPLATE, params, PUBLIC_KEY)\n      .then((result) => {\n        console.log(result);\n\n        setName(\"\")\n        setEmail(\"\")\n        setPhone(\"\")\n        setMessage(\"\")\n        setSuccess(true)\n\n      }, (error) => {\n        setError(true)\n        console.log(error.text);\n      });\n  }\n\n  return <Box sx={{ width: '80%', maxWidth: '1000px', backgroundColor: '#ffffff', padding: 2, borderRadius: '8px', boxShadow: 2, paddingTop: '100px', paddingBottom: 50, margin: '0 auto'}} justifySelf={'center'}>\n    <Grid\n      container\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\",\n        alignItem: \"center\",\n        paddingBottom: \"100px\",\n      }}>\n      <Grid md={6} display={\"flex\"} flexDirection={\"column\"}>\n          <Grid>\n            <ContactInfo language={language} />\n          </Grid>\n          <Grid>\n          <TextField\n            id=\"name-input\"\n            label={CONTACT_CONTENT[language].nameInput}\n            type=\"name\"\n            variant=\"outlined\"\n            style={{\n              width: '100%',\n              marginTop: 50\n            }}\n            value={name}\n            onChange={(e) => {\n              setName(e.target.value)\n            }}\n            size=\"small\"\n          />\n          <TextField\n            id=\"email-input\"\n            label={CONTACT_CONTENT[language].emailInput}\n            type=\"email\"\n            autoComplete=\"Your Email\"\n            variant=\"outlined\"\n            style={{\n              width: '100%',\n              marginTop: 20\n            }}\n            value={email}\n            onChange={(e) => {\n              setEmail(e.target.value)\n            }}\n            size=\"small\"\n          />\n          <TextField\n            id=\"phone-input\"\n            label={CONTACT_CONTENT[language].phoneInput}\n            type=\"phone\"\n            autoComplete=\"Your Phone\"\n            variant=\"outlined\"\n            style={{\n              width: '100%',\n              marginTop: 20\n            }}\n            value={phone}\n            onChange={(e) => {\n              setPhone(e.target.value)\n            }}\n            size=\"small\"\n          />\n          <TextField\n            id=\"message-input\"\n            label={CONTACT_CONTENT[language].messageInput}\n            type=\"message\"\n            autoComplete=\"Your Message\"\n            variant=\"outlined\"\n            multiline={true}\n            rows={5}\n            style={{\n              width: '100%',\n              marginTop: 20\n            }}\n            value={message}\n            onChange={(e) => {\n              setMessage(e.target.value)\n            }}\n          />\n          {success && <Box width={'100%'} marginTop={\"20pt\"}>\n            <Alert severity=\"success\">{CONTACT_CONTENT[language].successMsg}</Alert>\n          </Box>}\n          {error && <Box width={'100%'} marginTop={\"20pt\"}>\n            <Alert severity=\"error\">{CONTACT_CONTENT[language].errorMsg}</Alert>\n          </Box>}\n          <Box width={\"100%\"} display={\"flex\"} justifyContent={\"right\"} marginTop={\"20pt\"} paddingBottom={2}>\n            <Button onClick={(e) => onSubmit(e)} type=\"submit\" variant=\"contained\" style={{ minWidth: 100 }}>\n              {CONTACT_CONTENT[language].submitBtn}\n            </Button>\n          </Box>\n          </Grid>\n      </Grid>\n      <Grid md={5} style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"top\",\n        alignItems: \"top\",\n      }}>\n        <Box height=\"90%\" direction=\"flex\" justifyContent={\"centse\"} alignItems={\"top\"}>\n          <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3018.6451164792375!2d-74.42900408727112!3d40.83575807125593!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x89c3a7c048043bef%3A0xbc81a8fd3b1a55b5!2sSaint%20John%20the%20Baptist%20Ukrainian%20Catholic%20Church!5e0!3m2!1sen!2sus!4v1742655055864!5m2!1sen!2sus\" width=\"100%\" height=\"100%\" style={{border:0}} allowfullscreen=\"\" loading=\"lazy\" referrerpolicy=\"no-referrer-when-downgrade\"></iframe>\n        </Box>\n      </Grid>\n    </Grid>\n  </Box>\n}\n\nexport const Head = () => <Seo title=\"Contact\" />\n\nconst Contact = () => {\n  return <Layout>\n    <ContactForm />\n    <Box sx={{ position: \"fixed\", bottom: \"0\", left: 0, width: \"100%\" }}>\n      <Footer />\n    </Box>\n  </Layout>\n}\n\nexport default Contact\n"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","CONTACT_CONTENT","en","title","submitBtn","nameInput","emailInput","phoneLabel","phoneInput","messageInput","successMsg","errorMsg","copyEmail","copyAddress","ua","store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","init","origin","_userID","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","form","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","EMAIL","ADDRESS_LINE_1","ADDRESS_LINE_2","ContactInfo","language","isClient","setIsClient","useState","churchName","GENERAL_CONTENT","name","pastorName","pastor","useEffect","Box","paddingBottom","Typography","fontWeight","fontSize","alignItems","Stack","width","direction","display","justifyContent","gap","Tooltip","IconButton","onClick","navigator","clipboard","writeText","sx","padding","ContentCopy","pastorLabel","ContactForm","setName","React","email","setEmail","phone","setPhone","message","setMessage","success","setSuccess","error","setError","setTimeout","maxWidth","backgroundColor","borderRadius","boxShadow","paddingTop","margin","justifySelf","Grid","container","style","flexDirection","alignItem","md","TextField","id","label","type","variant","marginTop","value","onChange","e","size","autoComplete","multiline","rows","Alert","A","severity","Button","preventDefault","emailjs","then","result","console","log","onSubmit","minWidth","height","src","border","allowfullscreen","loading","referrerpolicy","Head","position","bottom","left","Footer"],"sourceRoot":""}